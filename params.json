{"name":"Zg","tagline":"Zinux Generator Tool","body":"This is a tool designed to create, manipulate <i>[zinux](https://github.com/dariushha/zinux)</i> projects. <i>Zinux generator tool</i> is an efficient appliction designed to make use of <i>zinux</i>\r\nproject even easier than it is, and also makes you develop more, in a short time.<br />\r\n\r\n> From now on we will refer to <b><i>Zinux Generator Tool</i></b> by <b><i>zg</i></b>. \r\n\r\nTopics\r\n--\r\n* [Requirements](#requirements)\r\n* [Installation](#installation)\r\n  * [Windows Users](#windows-users) \r\n* [Commands Types](#command-types)\r\n\t* [<b><i>Version</i></b>](#version)\r\n\t* [<b><i>Help</i></b>](#help)\r\n\t* [<b><i>New</i></b>](#new)\r\n\t\t* [New Project](#new-project)\r\n\t\t* [New Module](#new-module)\r\n\t\t* [New Controller](#new-controller)\r\n\t\t* [New Action](#new-action)\r\n\t\t* [New View](#new-view)\r\n\t\t* [New Layout](#new-layout)\r\n\t\t* [New Model](#new-model)\r\n\t\t* [New Helper](#new-helper)\r\n\t\t* [New Application](#new-application)\r\n\t\t\t* [New Application Bootstrap](#new-application-bootstrap)\r\n\t\t\t* [New Application Routes](#new-application-routes)\r\n\t* [<b><i>Remove</i></b>](#remove)\r\n\t\t* [Remove Module](#remove-module)\r\n\t\t* [Remove Controller](#remove-controller)\r\n\t\t* [Remove Action](#remove-action)\r\n\t\t* [Remove View](#remove-view)\r\n\t\t* [Remove Layout](#remove-layout)\r\n\t\t* [Remove Model](#remove-model)\r\n\t\t* [Remove Helper](#remove-helper)\r\n\t\t* [Remove Application](#remove-application)\r\n\t\t\t* [Remove Application Bootstrap](#remove-application-bootstrap)\r\n\t\t\t* [Remove Application Routes](#remove-application-routes)\r\n\t* [<b><i>Build</i></b>](#build)\r\n\t* [<b><i>Config</i></b>](#config)\r\n\t* [<b><i>Security</i></b>](#security)\r\n\t* [<b><i>Status</i></b>](#status)\r\n\t* [<b><i>Update</i></b>](#update)\r\n\r\nRequirements\r\n--\r\n* PHP version 5.3.10 or greater\r\n* [Zinux](https://github.com/dariushha/zinux) Project 3.0.0\r\n\r\nInstallation\r\n--\r\nThere is a [zinux installer](https://raw.github.com/dariushha/zinux/master/zinux-installer) shell script, it will \r\nautomatically download and configure your system to use <i>zinux</i> project freely in your system.<br />\r\nIt also installs [zinux generator tool](https://github.com/dariushha/zg) which is an handy tool to create, manipulate\r\nand provides solid security for your <i>zinux</i> project, for more information see\r\n[Zinux Generator Tool](#zinux-generator-tool).\r\n\r\n> You will need to have [Git](http://git-scm.com/) installed before using\r\n[zinux installer](https://raw.github.com/dariushha/zinux/master/zinux-installer). \r\n\r\nFor installation just download the [zinux installer](https://raw.github.com/dariushha/zinux/master/zinux-installer) \r\nand save it at anywhere, and run the following command `bash /path/to/your/zinux/installer` it will do the reset. \r\n\r\nWindows Users\r\n--\r\nFor running shell scripts in Windows you need a third-party application installed in your system \r\nto enable using shell scripts in Windows, such as:\r\n* [GnuWin32](http://gnuwin32.sourceforge.net/)\r\n* [UnxUtils](http://unxutils.sourceforge.net/)\r\n\r\n> <b>Note:</b> [zinux generator tool](https://github.com/dariushha/zg) also uses shell scripts to run faster, \r\nso before you use [zinux installer](https://raw.github.com/dariushha/zinux/master/zinux-installer) or start using\r\n[zinux generator tool](https://github.com/dariushha/zg) make sure your Windows supports shell scripts, i.e if \r\n`ls -l` command lists your directories, you are OK! \r\n\r\nCommand Types\r\n==\r\nThe <i>zg</i> uses very simple and flexible command lines. Except [Security](#security) command line which is an \r\nsensitive command all other commands has aliases which is the short form of original command. A list of available \r\ncommands and their details is as follow:<br />\r\n\r\nVersion\r\n--\r\n<b>Title</b><br />\r\nShows Version.\r\n<hr />\r\n<b>Description</b><br />\r\nShow both Zinux's and Zinux Generator's versions.\r\n<hr />\r\n\r\n```PHP\r\n# Command\r\nzg --version\r\n```\r\n\r\n\r\n```PHP\r\n# Help\r\nzg -h --version\r\n```\r\n<hr />\r\n\r\nHelp\r\n--\r\n<b>Title</b><br />\r\nPrints help content.\r\n<hr />\r\n<b>Description</b><br />\r\nPrints help content.\r\n* It can be general help, which will print all commands help content.\r\n* It can be specific, which will print only the help content of target command.\r\n\r\n<hr /> \r\n\r\n```PHP\r\n# Command\r\nzg -h ($command) (--heads)\r\n```\r\n\r\n\r\n```PHP\r\n# Alias\r\nzg -h ($command_alias) (--heads)\r\n```\r\n\r\n\r\n```PHP\r\n# Help\r\nzg -h -h\r\n```\r\n<hr />\r\n<b>Optionals</b><br />\r\n* <b>$command</b> : print a specific command's help content.\r\n* <b>--heads</b>  : if you pass this argument it will only print valid command lines under `$command` command line.\r\n\r\n\r\n<hr />\r\n<b>Default Values</b><br />\r\n* <b>$command</b> : If you don't pass `$command` it will print all commands' help content. \r\n\r\n<hr />\r\n<b>Notes</b><br />\r\n* `$command` should be a valid command in `zg` command list.\r\n\r\n<hr />\r\n<b>Examples</b><br />\r\n```PHP\r\n# prints all commands' help content\r\nzg\r\n# OR using aliases :\r\nzg -h\r\n```\r\n```PHP\r\n# prints 'zg new'command's help content\r\nzg -h new \r\n# OR using aliases :\r\nzg -h n\r\n```\r\n<b>Or you can be more specific, like:</b>\r\n```PHP\r\n# prints 'zg new action' command's help content\r\nzg -h new action\r\n# OR using aliases :\r\nzg -h n a\r\n```\r\n<hr />\r\nNew\r\n--\r\nNew Project\r\n--\r\n<b>Title</b><br />\r\nCreate new project.\r\n<b>Description</b><br />\r\nThis command will creates new project and its initial files and directories are:\r\n* application\r\n\t* appBootstrap.php\r\n\t* appRoutes.php \r\n* modules/defaultModule\r\n\t* controller\r\n\t\t* indexController.php\r\n\t* views/layout\r\n\t\t* defaultLayout.phtml\r\n\t* views/view/index\r\n\t\t* indexView.phtml\r\n\t* defaultBootstrap.php\t\r\n* public_html\r\n\t* index.php\r\n\t* .htaccess\r\n* [zinux](https://github.com/dariushha/zinux) framework\r\n\r\n<hr />\r\n\r\n```PHP\r\n# Command\r\nzg new project $project_name (--empty)\r\n```\r\n\r\n```PHP\r\n# Alias\r\nzg n $project_name (--empty)\r\n```\r\n\r\n```PHP\r\n# Help\r\nzg -h n p\r\n```\r\n<hr />\r\n<b>Optionals</b><br />\r\n* <b>--empty</b> : By passing this option it will create an empty project without any modules or application directory.\r\n\r\n<hr />\r\n<b>Notes</b><br />\r\n> In entire <i>zg</i> commands [spectial characters](http://en.wikipedia.org/wiki/Special_characters) in arguments will converted to '`_`' character.\r\n\r\n<hr /> \r\n<b>Examples</b><br />\r\n```PHP\r\n# creates new project direcroty named 'test\r\nzg new project test\r\n# or using aliases: \r\nzg n test\r\n```\r\n\r\n<hr />\r\nNew Module\r\n--\r\n<b>Title</b><br />\r\nCreate new module.\r\n<hr />\r\n<b>Description</b><br />\r\nThis command will creates new module for project and its initial files and directories are:\r\n* modules/MODULE_NAME\r\n\t* controller\r\n\t\t* indexController.php\r\n\t* views/layout\r\n\t\t* MODULE_NAMELayout.phtml\r\n\t* views/view/index\r\n\t\t* indexView.phtml\r\n\t* defaultBootstrap.php\t\r\n\r\n<hr />\r\n\r\n```PHP\r\n# Command\r\nzg new module $module_name\r\n```\r\n\r\n```PHP\r\n# Alias\r\nzg n module $module_name\r\n```\r\n\r\n```PHP\r\n# Help\r\nzg -h n module\r\n```\r\n<hr />\r\n\r\n<b>Notes</b><br />\r\n> The `Module` postfix is not needed at end of `$module_name`.\r\n\r\n<hr />\r\n<b>Examples</b><br />\r\n```PHP\r\n# creates new module named 'admin'\r\nzg new module admin\r\n# or using aliases: \r\nzg n module admin\r\n```\r\n```PHP\r\n# creates new module named 'ssl'\r\nzg new module ssl\r\n# or using aliases: \r\nzg n module ssl\r\n```\r\n<hr />\r\nNew Controller\r\n--\r\n<b>Title</b><br />\r\nCreate new controller.\r\n<hr />\r\n<b>Description</b><br />\r\nCreates new controller in a module and its initial files and directories are:\r\n* modules/MODULE_NAME\r\n\t* controller\r\n\t\t* CONTROLLER_NAMEController.php\r\n\t* views/view/CONTROLLER_NAME\r\n\t\t* indexView.phtml\r\n\r\n<hr />\r\n\r\n```PHP\r\n# Command\r\nzg new controller $controller_name ($module_name)\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Alias\r\nzg n c $controller_name ($module_name)\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Help\r\nzg -h n c\r\n```\r\n<hr />\r\n<b>Optionals</b><br />\r\n* <b>$module_name</b> : The name of target module that we want to create the contoller in it.\r\n\r\n<hr />\r\n<b>Default Values</b><br />\r\n* <b>$module_name</b> : <i>defaultModule</i>\r\n\t* If no module name supplied by default <i>defaultModule</i> will be targeted.\r\n\r\n<hr />\r\n\r\n<b>Notes</b><br />\r\n> The `Module` and `Controller` postfixes are not needed at end of `$module_name` and `$controller_name` names.\r\n\r\n<hr />\r\n<b>Examples</b><br />\r\n```PHP\r\n# creates new contoller named 'auth' in 'defaultModule'\r\nzg new controller auth\r\n# or more specific:\r\nzg new controller authController defaultModule \r\n# or using aliases: \r\nzg n c auth\r\n```\r\n```PHP\r\n# creates new contoller named 'comments' in 'userModule'\r\nzg new controller comments user\r\n# or more specific:\r\nzg new controller commentsController userModule \r\n# or using aliases: \r\nzg n c comment user\r\n```\r\n\r\n<hr />\r\nNew Action\r\n--\r\n<b>Title</b><br />\r\nCreate new action function.\r\n<hr />\r\n<b>Description</b><br />\r\nCreates new action function in any desired, controller and module.\r\n<hr />\r\n\r\n```PHP\r\n# Command\r\nzg new action $action_name ($controller_name) ($module_name)\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Alias\r\nzg n a $action_name ($controller_name) ($module_name)\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Help\r\nzg -h n a\r\n```\r\n<hr />\r\n<b>Optionals</b><br />\r\n* <b>$controller_name</b> : The name of target controller that we want to create the action in it.\r\n* <b>$module_name</b>     : The name of target module that contains `$controller_name`.\r\n\r\n<hr />\r\n<b>Default Values</b><br />\r\n* <b>$controller_name</b> : <i>indexController</i>\r\n* <b>$module_name</b>     : <i>defaultModule</i>\r\n\r\n<hr />\r\n<b>Notes</b><br />\r\n> The `Module`,`Controller`,`Action` postfixes are not needed at end of `$module_name`, `$controller_name` and `$action_name` names.\r\n\r\n<hr />\r\n<b>Examples</b><br />\r\n```PHP\r\n# creates new action named 'help' in 'indexController', 'defaultModule'\r\nzg new action help\r\n# or using aliases: \r\nzg n a help\r\n```\r\n```PHP\r\n# creates new action named 'login' in 'authController', 'sslModule'\r\nzg new action login auth ssl\r\n# or using aliases: \r\nzg n a login auth ssl\r\n```\r\n\r\n<hr />\r\nNew View\r\n--\r\n<b>Title</b><br />\r\nCreate new view.\r\n<hr />\r\n<b>Description</b><br />\r\nCreates new view related to a controller in any desired module.\r\n<hr />\r\n\r\n```PHP\r\n# Command\r\nzg new view $view_name ($controller_name) ($module_name)\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Alias\r\nzg n a $view_name ($controller_name) ($module_name)\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Help\r\nzg -h n v\r\n```\r\n<hr />\r\n<b>Optionals</b><br />\r\n* <b>$controller_name</b> : The name of target controller that we want to relate the view with it.\r\n* <b>$module_name</b>     : The name of target module that contains `$controller_name`.\r\n\r\n<hr />\r\n<b>Default Values</b><br />\r\n* <b>$controller_name</b> : <i>indexController</i>\r\n* <b>$module_name</b>     : <i>defaultModule</i>\r\n\r\n<hr />\r\n<b>Notes</b><br />\r\n> The `Module`,`Controller`,`View` postfixes are not needed at end of `$module_name`, `$controller_name` and `$view_name` names.\r\n\r\n<hr />\r\n<b>Examples</b><br />\r\n```PHP\r\n# creates new view named 'help2' in 'indexController', 'defaultModule'\r\nzg new view help2\r\n# or using aliases: \r\nzg n v help2\r\n```\r\n```PHP\r\n# creates new view named 'login2' in 'authController', 'sslModule'\r\nzg new view login2 auth ssl\r\n# or using aliases: \r\nzg n v login2 auth ssl\r\n```\r\n\r\n<hr />\r\nNew Layout\r\n--\r\n<b>Title</b><br />\r\nCreate new layout.\r\n<hr />\r\n<b>Description</b><br />\r\nCreates new layout in a module.\r\n\r\n<hr />\r\n\r\n```PHP\r\n# Command\r\nzg new layout $layout_name ($module_name)\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Alias\r\nzg n l $layout_name ($module_name)\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Help\r\nzg -h n l\r\n```\r\n<hr />\r\n<b>Optionals</b><br />\r\n* <b>$module_name</b> : The name of target module that we want to create the contoller in it.\r\n\r\n<hr />\r\n<b>Default Values</b><br />\r\n* <b>$module_name</b> : <i>defaultModule</i>\r\n\t* If no module name supplied by default <i>defaultModule</i> will be targeted.\r\n\r\n<hr />\r\n\r\n<b>Notes</b><br />\r\n> The `Module` and `Layout` postfixes are not needed at end of `$module_name` and `$layout_name` names.\r\n\r\n<hr />\r\n<b>Examples</b><br />\r\n```PHP\r\n# creates new layout named 'print' in 'defaultModule'\r\nzg new layout print \r\n# or using aliases: \r\nzg n l print\r\n```\r\n```PHP\r\n# creates new layout named 'dark' in 'userModule'\r\nzg new layout dark user \r\n# or using aliases: \r\nzg n l dark user\r\n```\r\n\r\n<hr />\r\nNew Model\r\n--\r\n<b>Title</b><br />\r\nCreate new model.\r\n<hr />\r\n<b>Description</b><br />\r\nCreates new model in a module.\r\n\r\n<hr />\r\n\r\n```PHP\r\n# Command\r\nzg new model $model_name ($module_name)\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Alias\r\nzg n m $model_name ($module_name)\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Help\r\nzg -h n m\r\n```\r\n<hr />\r\n<b>Optionals</b><br />\r\n* <b>$module_name</b> : The name of target module that we want to create the contoller in it.\r\n\r\n<hr />\r\n<b>Default Values</b><br />\r\n* <b>$module_name</b> : <i>defaultModule</i>\r\n\t* If no module name supplied by default <i>defaultModule</i> will be targeted.\r\n\r\n<hr />\r\n\r\n<b>Notes</b><br />\r\n> For free uses of models there is no naming convention in models, i.e in layouts when you\r\nexecute the `zg new layout dark` it will create a layout named <b>darkLayout</b> with a <b>Layout</b>\r\npost-appended name.<br />\r\nIn models there is no such post-appending in names, so for example if you execute the `zg new model user` it will create a model in `defaultModule` named exactly as you type i.e <b>user</b> and if you execute `zg new model userModel` it will exactly creates a model named <b>userModel</b>, etc.\r\n<hr />\r\n> The `Module` postfix is not needed at end of `$module_name`.\r\n\r\n<hr />\r\n<b>Examples</b><br />\r\n```PHP\r\n# creates new model named 'user' in 'defaultModule'\r\nzg new model user\r\n# or using aliases: \r\nzg n m user\r\n```\r\n```PHP\r\n# creates new model named 'adminModel' in 'userModule'\r\nzg new model adminModel user\r\n# or using aliases: \r\nzg n m adminModel user\r\n```\r\n\r\n<hr />\r\nNew Helper\r\n--\r\n<b>Title</b><br />\r\nCreate new heler.\r\n<hr />\r\n<b>Description</b><br />\r\nCreates new helper in a module.\r\n\r\n<hr />\r\n\r\n```PHP\r\n# Command\r\nzg new helper $helper_name ($module_name)\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Alias\r\nzg n h $helper_name ($module_name)\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Help\r\nzg -h n h\r\n```\r\n<hr />\r\n<b>Optionals</b><br />\r\n* <b>$module_name</b> : The name of target module that we want to create the contoller in it.\r\n\r\n<hr />\r\n<b>Default Values</b><br />\r\n* <b>$module_name</b> : <i>defaultModule</i>\r\n\t* If no module name supplied by default <i>defaultModule</i> will be targeted.\r\n\r\n<hr />\r\n\r\n<b>Notes</b><br />\r\n> The `Module` and `Helper` postfixes are not needed at end of `$module_name` and `$helper_name`.\r\n\r\n<hr />\r\n<b>Examples</b><br />\r\n```PHP\r\n# creates new helper named 'generics' in 'defaultModule'\r\nzg new helper generics\r\n# or using aliases: \r\nzg n h generics\r\n```\r\n```PHP\r\n# creates new helper named 'validators' in 'userModule'\r\nzg new helper validators user\r\n# or using aliases: \r\nzg n h validators user\r\n```\r\nNew Application\r\n--\r\nNew Application Bootstrap\r\n--\r\n<b>Title</b><br />\r\nCreate new application bootstrap for project.\r\n<hr />\r\n<b>Description</b><br />\r\nThis command will creates new application bootstrap under `PROJECT-ROOT/application` directory. \r\n<hr />\r\n\r\n```PHP\r\n# Command\r\nzg new application boostrap $bootstrap_name\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Alias\r\nzg n app b $bootstrap_name\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Help\r\nzg -h n app b\r\n```\r\n<hr />\r\n\r\n<b>Notes</b><br />\r\n> The `Bootstrap` postfix is not needed at end of `$bootstrap_name`.\r\n\r\n<hr />\r\n<b>Examples</b><br />\r\n```PHP\r\n# creates new application bootstrap named 'db'\r\nzg new application bootstrap db\r\n# or using aliases: \r\nzg n app b db\r\n```\r\n```PHP\r\n# creates new application bootstrap named 'ssl'\r\nzg new application bootstrap ssl\r\n# or using aliases: \r\nzg n app b ssl\r\n```\r\n<hr />\r\nNew Application Routes\r\n--\r\n<b>Title</b><br />\r\nCreate new application routes for project.\r\n<hr />\r\n<b>Description</b><br />\r\nThis command will creates new application routes under `PROJECT-ROOT/application` directory. \r\n<hr />\r\n\r\n```PHP\r\n# Command\r\nzg new application routes $routes_name\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Alias\r\nzg n app r $routes_name\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Help\r\nzg -h n app r\r\n```\r\n<hr />\r\n\r\n<b>Notes</b><br />\r\n> The `Routes` postfix is not needed at end of `$routes_name`.\r\n\r\n<b>Examples</b><br />\r\n```PHP\r\n# creates new application routes named 'comment'\r\nzg new application routes comment\r\n# or using aliases: \r\nzg n app r comments\r\n```\r\n```PHP\r\n# creates new application routes named 'ssl'\r\nzg new application routes ssl\r\n# or using aliases: \r\nzg n app r ssl\r\n```\r\n<hr />\r\nRemove\r\n--\r\nRemove Module\r\n--\r\n<b>Title</b><br />\r\nRemoves an existed module.\r\n<hr />\r\n<b>Description</b><br />\r\nThis command will Remove an existed module from project.\r\n\r\n<hr />\r\n\r\n```PHP\r\n# Command\r\nzg remove module $module_name\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Alias\r\nzg r module $module_name\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Help\r\nzg -h r module\r\n```\r\n<hr />\r\n\r\n<b>Notes</b><br />\r\n> The `Module` postfix is not needed at end of `$module_name`.\r\n\r\n<hr />\r\n<b>Examples</b><br />\r\n```PHP\r\n# removes an existed module named 'admin'\r\nzg remove module admin\r\n# or using aliases: \r\nzg r module admin\r\n```\r\n```PHP\r\n# removes an existed module named 'ssl'\r\nzg remove module ssl\r\n# or using aliases: \r\nzg r module ssl\r\n```\r\n<hr />\r\nRemove Controller\r\n--\r\n<b>Title</b><br />\r\nRemoves an existed controller.\r\n<hr />\r\n<b>Description</b><br />\r\nRemoves an existed controller from module.\r\n\r\n<hr />\r\n\r\n```PHP\r\n# Command\r\nzg remove controller $controller_name ($module_name)\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Alias\r\nzg r c $controller_name ($module_name)\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Help\r\nzg -h r c\r\n```\r\n<hr />\r\n<b>Optionals</b><br />\r\n* <b>$module_name</b> : The name of target module that we want to remove the contoller from it.\r\n\r\n<hr />\r\n<b>Default Values</b><br />\r\n* <b>$module_name</b> : <i>defaultModule</i>\r\n\t* If no module name supplied by default <i>defaultModule</i> will be targeted.\r\n\r\n<hr />\r\n\r\n<b>Notes</b><br />\r\n> The `Module` and `Controller` postfixes are not needed at end of `$module_name` and `$controller_name` names.\r\n\r\n<hr />\r\n<b>Examples</b><br />\r\n```PHP\r\n# removes an existed contoller named 'auth' from 'defaultModule'\r\nzg remove controller auth\r\n# or more specific:\r\nzg remove controller authController defaultModule \r\n# or using aliases: \r\nzg r c auth\r\n```\r\n```PHP\r\n# removes an existed contoller named 'comments' from 'userModule'\r\nzg remove controller comments user\r\n# or more specific:\r\nzg remove controller commentsController userModule \r\n# or using aliases: \r\nzg r c comment user\r\n```\r\n\r\n<hr />\r\nRemove Action\r\n--\r\n<b>Title</b><br />\r\nRemoves an existed action function.\r\n<hr />\r\n<b>Description</b><br />\r\nRemoves an existed action function from any desired, controller and module.\r\n<hr />\r\n\r\n```PHP\r\n# Command\r\nzg remove action $action_name ($controller_name) ($module_name)\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Alias\r\nzg r a $action_name ($controller_name) ($module_name)\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Help\r\nzg -h r a\r\n```\r\n<hr />\r\n<b>Optionals</b><br />\r\n* <b>$controller_name</b> : The name of target controller that we want to remove the action from it.\r\n* <b>$module_name</b>     : The name of target module that contains `$controller_name`.\r\n\r\n<hr />\r\n<b>Default Values</b><br />\r\n* <b>$controller_name</b> : <i>indexController</i>\r\n* <b>$module_name</b>     : <i>defaultModule</i>\r\n\r\n<hr />\r\n<b>Notes</b><br />\r\n> The `Module`,`Controller`,`Action` postfixes are not needed at end of `$module_name`, `$controller_name` and `$action_name` names.\r\n\r\n<hr />\r\n<b>Examples</b><br />\r\n```PHP\r\n# removes an existed action named 'help' from 'indexController', 'defaultModule'\r\nzg remove action help\r\n# or using aliases: \r\nzg r a help\r\n```\r\n```PHP\r\n# removes an existed action named 'login' from 'authController', 'sslModule'\r\nzg remove action login auth ssl\r\n# or using aliases: \r\nzg r a login auth ssl\r\n```\r\n\r\n<hr />\r\nRemove View\r\n--\r\n<b>Title</b><br />\r\nRemoves an existed view.\r\n<hr />\r\n<b>Description</b><br />\r\nRemoves an existed view related to a controller from any desired module.\r\n<hr />\r\n\r\n```PHP\r\n# Command\r\nzg remove view $view_name ($controller_name) ($module_name)\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Alias\r\nzg r a $view_name ($controller_name) ($module_name)\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Help\r\nzg -h r v\r\n```\r\n<hr />\r\n<b>Optionals</b><br />\r\n* <b>$controller_name</b> : The name of target controller that we want to relate the view with it.\r\n* <b>$module_name</b>     : The name of target module that contains `$controller_name`.\r\n\r\n<hr />\r\n<b>Default Values</b><br />\r\n* <b>$controller_name</b> : <i>indexController</i>\r\n* <b>$module_name</b>     : <i>defaultModule</i>\r\n\r\n<hr />\r\n<b>Notes</b><br />\r\n> The `Module`,`Controller`,`View` postfixes are not needed at end of `$module_name`, `$controller_name` and `$view_name` names.\r\n\r\n<hr />\r\n<b>Examples</b><br />\r\n```PHP\r\n# removes an existed view named 'help2' from 'indexController', 'defaultModule'\r\nzg remove view help2\r\n# or using aliases: \r\nzg r v help2\r\n```\r\n```PHP\r\n# removes an existed view named 'login2' from 'authController', 'sslModule'\r\nzg remove view login2 auth ssl\r\n# or using aliases: \r\nzg r v login2 auth ssl\r\n```\r\n\r\n<hr />\r\nRemove Layout\r\n--\r\n<b>Title</b><br />\r\nRemoves an existed layout.\r\n<hr />\r\n<b>Description</b><br />\r\nRemoves an existed layout from module.\r\n\r\n<hr />\r\n\r\n```PHP\r\n# Command\r\nzg remove layout $layout_name ($module_name)\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Alias\r\nzg r l $layout_name ($module_name)\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Help\r\nzg -h r l\r\n```\r\n<hr />\r\n<b>Optionals</b><br />\r\n* <b>$module_name</b> : The name of target module that we want to remove the contoller from it.\r\n\r\n<hr />\r\n<b>Default Values</b><br />\r\n* <b>$module_name</b> : <i>defaultModule</i>\r\n\t* If no module name supplied by default <i>defaultModule</i> will be targeted.\r\n\r\n<hr />\r\n\r\n<b>Notes</b><br />\r\n> The `Module` and `Layout` postfixes are not needed at end of `$module_name` and `$layout_name` names.\r\n\r\n<hr />\r\n<b>Examples</b><br />\r\n```PHP\r\n# removes an existed layout named 'print' from 'defaultModule'\r\nzg remove layout print \r\n# or using aliases: \r\nzg r l print\r\n```\r\n```PHP\r\n# removes an existed layout named 'dark' from 'userModule'\r\nzg remove layout dark user \r\n# or using aliases: \r\nzg r l dark user\r\n```\r\n\r\n<hr />\r\nRemove Model\r\n--\r\n<b>Title</b><br />\r\nRemoves an existed model.\r\n<hr />\r\n<b>Description</b><br />\r\nRemoves an existed model from a module.\r\n\r\n<hr />\r\n\r\n```PHP\r\n# Command\r\nzg remove model $model_name ($module_name)\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Alias\r\nzg r m $model_name ($module_name)\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Help\r\nzg -h r m\r\n```\r\n<hr />\r\n<b>Optionals</b><br />\r\n* <b>$module_name</b> : The name of target module that we want to remove the contoller from it.\r\n\r\n<hr />\r\n<b>Default Values</b><br />\r\n* <b>$module_name</b> : <i>defaultModule</i>\r\n\t* If no module name supplied by default <i>defaultModule</i> will be targeted.\r\n\r\n<hr />\r\n\r\n<b>Notes</b><br />\r\n> For free uses of models there is no naming convention in models, i.e in layouts when you\r\nexecute the `zg remove layout dark` it will remove a layout named <b>darkLayout</b> with a <b>Layout</b>\r\npost-appended name.<br />\r\nIn models there is no such post-appending in names, so for example if you execute the `zg remove model user` \r\nit will remove a model in `defaultModule` named exactly as you type i.e <b>user</b> and if you execute \r\n`zg remove model userModel` it will exactly remove a model named <b>userModel</b>, etc.\r\n<hr />\r\n> The `Module` postfix is not needed at end of `$module_name`.\r\n\r\n<hr />\r\n<b>Examples</b><br />\r\n```PHP\r\n# removes an existed model named 'user' from 'defaultModule'\r\nzg remove model user\r\n# or using aliases: \r\nzg r m user\r\n```\r\n```PHP\r\n# removes an existed model named 'adminModel' from 'userModule'\r\nzg remove model adminModel user\r\n# or using aliases: \r\nzg r m adminModel user\r\n```\r\n\r\n<hr />\r\nRemove Helper\r\n--\r\n<b>Title</b><br />\r\nRemoves an existed heler.\r\n<hr />\r\n<b>Description</b><br />\r\nRemoves an existed helper from a module.\r\n\r\n<hr />\r\n\r\n```PHP\r\n# Command\r\nzg remove helper $helper_name ($module_name)\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Alias\r\nzg r h $helper_name ($module_name)\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Help\r\nzg -h r h\r\n```\r\n<hr />\r\n<b>Optionals</b><br />\r\n* <b>$module_name</b> : The name of target module that we want to remove the contoller from it.\r\n\r\n<hr />\r\n<b>Default Values</b><br />\r\n* <b>$module_name</b> : <i>defaultModule</i>\r\n\t* If no module name supplied by default <i>defaultModule</i> will be targeted.\r\n\r\n<hr />\r\n\r\n<b>Notes</b><br />\r\n> The `Module` and `Helper` postfixes are not needed at end of `$module_name` and `$helper_name`.\r\n\r\n<hr />\r\n<b>Examples</b><br />\r\n```PHP\r\n# removes an existed helper named 'generics' from 'defaultModule'\r\nzg remove helper generics\r\n# or using aliases: \r\nzg r h generics\r\n```\r\n```PHP\r\n# removes an existed helper named 'validators' from 'userModule'\r\nzg remove helper validators user\r\n# or using aliases: \r\nzg r h validators user\r\n```\r\nRemove Application\r\n--\r\nRemove Application Bootstrap\r\n--\r\n<b>Title</b><br />\r\nRemoves an existed application bootstrap for project.\r\n<hr />\r\n<b>Description</b><br />\r\nThis command will Removes an existed application bootstrap from `PROJECT-ROOT/application` directory. \r\n<hr />\r\n\r\n```PHP\r\n# Command\r\nzg remove application boostrap $bootstrap_name\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Alias\r\nzg r app b $bootstrap_name\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Help\r\nzg -h r app b\r\n```\r\n<hr />\r\n\r\n<b>Notes</b><br />\r\n> The `Bootstrap` postfix is not needed at end of `$bootstrap_name`.\r\n\r\n<hr />\r\n<b>Examples</b><br />\r\n```PHP\r\n# removes an existed application bootstrap named 'db'\r\nzg remove application bootstrap db\r\n# or using aliases: \r\nzg r app b db\r\n```\r\n```PHP\r\n# removes an existed application bootstrap named 'ssl'\r\nzg remove application bootstrap ssl\r\n# or using aliases: \r\nzg r app b ssl\r\n```\r\n<hr />\r\nRemove Application Routes\r\n--\r\n<b>Title</b><br />\r\nRemoves an existed application routes for project.\r\n<hr />\r\n<b>Description</b><br />\r\nThis command will Removes an existed application routes from `PROJECT-ROOT/application` directory. \r\n<hr />\r\n\r\n```PHP\r\n# Command\r\nzg remove application routes $routes_name\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Alias\r\nzg r app r $routes_name\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Help\r\nzg -h r app r\r\n```\r\n<hr />\r\n\r\n<b>Notes</b><br />\r\n> The `Routes` postfix is not needed at end of `$routes_name`.\r\n\r\n<b>Examples</b><br />\r\n```PHP\r\n# removes an existed application routes named 'comment'\r\nzg remove application routes comment\r\n# or using aliases: \r\nzg r app r comments\r\n```\r\n```PHP\r\n# removes an existed application routes named 'ssl'\r\nzg remove application routes ssl\r\n# or using aliases: \r\nzg r app r ssl\r\n```\r\n<hr />\r\n\r\nBuild\r\n--\r\n<b>Title</b><br />\r\nRe-build <i>zg</i> config file. \r\n<hr />\r\n<b>Description</b><br />\r\nSometimes happen you manipulate your project entities manually instead of using <i>zg</i>, i.e you\r\nmay add a controller named `fooController` manually in `defaultController` and next time you may want \r\nto a new action named `barAction` to `fooController`, but since `fooController` created manually it \r\ndoesn't exist in <i>zg</i> manifest list, so it won't recognize `fooController` and an error will raise like:\r\n```\r\n# output result of : \r\n# zg n a bar foo\r\n\r\nZinux Generator(vX.X.X) by Dariush Hasanpoor [b.g.dariush@gmail.com] 2013\r\n[ Error occured ]\r\n    Controller 'defaultModule/fooController' does not exist in zg manifest!\r\n    Try 'zg build' command!\r\n```\r\nIn such cases <i>zg</i> provided a simple solution and that is `zg build` command.<br />\r\nIt will build up <i>zg</i> manifest list from scratch to top, any [zinux entity](https://github.com/dariushha/zinux#mvc-entities)\r\nwill be re-registered again, including in our example case `fooController` which made manually.<br />\r\nIn our example case after `zg build` you are good to go with `zg n a bar foo`.\r\n\r\n> There is an other usecase of `zg build` options an is that when you have lost or corrupted your <i>zg</i>\r\nconfig files, this command will be useful. \r\n\r\n<hr />\r\n\r\n```PHP\r\n# Command\r\nzg build ( -m ) ( -a ) ( -p )\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Alias\r\nzg b ( -m ) ( -a ) ( -p )\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Help\r\nzg -h b\r\n```\r\n<hr />\r\n<b>Optionals</b><br />\r\n* <b>-m</b> : `-m /app/modules/path` \r\n* <b>-a</b> : `-a /app/application/folder/path`\r\n* <b>-p</b> : `-p /app/project/path`\r\n\r\n\r\n<hr />\r\n<b>Default Values</b><br />\r\n* <b>-m</b> : <i>modules</i> \r\n* <b>-a</b> : <i>application</i>\r\n* <b>-p</b> : <i>.</i>(Current Directory)\r\n\r\n<hr />\r\n<b>Notes</b><br />\r\n> In many normal cases you don't have to enter any of `zg build`'s options at all, as long as you lauch \r\n`zg build` in any project's root folder it will built up the <i>zg</i> manifest file.  \r\n\r\n<hr />\r\n<b>Examples</b><br />\r\n```PHP\r\n# builds a zg manifest under current folder\r\n# note : we are in /path/to/PROJECT-ROOT when we are doing this\r\nzg build\r\n# or using aliases: \r\nzg b\r\n```\r\n```PHP\r\n# builds a zg manifest for an application\r\nzg build -p \"/path/to/target/app\" -m \"/relative/path/from/app/root/to/modules/\" -a \"/relative/path/to/application\"  \r\n# or using aliases: \r\nzg b -p \"/path/to/target/app\" -m \"/relative/path/from/app/root/to/modules/\" -a \"/relative/path/to/application\"\r\n```\r\n<hr />\r\n\r\nConfig\r\n--\r\n<b>Title</b><br />\r\nConfigure zinux generator.\r\n<hr />\r\n<b>Description</b><br />\r\nConfigure zinux generator for current project with given options.\r\n<hr />\r\n\r\n```PHP\r\n# Command\r\nzg config $options\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Alias\r\nzg c $options\r\n```\r\n\r\n\r\n\r\n```PHP\r\n# Help\r\nzg -h c\r\n```\r\n<hr />\r\n<b>Notes</b><br />\r\nAs i am wrting this document, there are only 2 options available for configuration:\r\n* <b>-show-parents</b> : Skip parent property in 'zg status' command.\r\n* <b>+show-parents</b> : Do not skip parent property in 'zg status' command.\r\n\r\n<hr />\r\n<b>Examples</b><br />\r\n```PHP\r\nzg config +show-parents\r\n# or using aliases: \r\nzg c -show-parents\r\n```\r\n<hr />\r\nSecurity\r\n--\r\nStatus\r\n--\r\nUpdate\r\n--\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}